{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","state","correctGuessCount","wrongGuessCount","questionsAnswered","0","1","2","3","4","onCorrectAnswer","questionNumber","setState","onWrongAnswer","renderQuizResults","className","console","log","this","src","alt","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ea9d3a1b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    correctGuessCount: 0,\n    wrongGuessCount: 0,\n    questionsAnswered: {\n      0: null,\n      1: null,\n      2: null,\n      3: null,\n      4: null\n    }\n  }\n\n  onCorrectAnswer = (questionNumber) => {\n    this.state.questionsAnswered[questionNumber] = true;\n    this.setState({\n      correctGuessCount: this.state.correctGuessCount + 1\n    })\n  }\n\n  onWrongAnswer = (questionNumber) => {\n    this.state.questionsAnswered[questionNumber] = false;\n    this.setState({\n      wrongGuessCount: this.state.wrongGuessCount + 1\n    })\n  }\n\n  renderQuizResults = () => {\n    return (\n      <div className=\"Results-Container\">\n        <div className=\"Results-Header\">\n          Great job! You got {this.state.correctGuessCount}/5.\n        </div>\n      </div>\n      \n    );\n  };\n\nrender() {\n  console.log('Rendering state: ', this.state)\n\n  if(this.state.correctGuessCount + this.state.wrongGuessCount > 4) {\n    return this.renderQuizResults();\n  }\n\n  return (\n    <div className=\"QuestionContainer\">\n      <h1 className=\"Header\">Can you guess the artist?</h1>\n      <div className=\"Guesses\">\n        {\n          this.state.correctGuessCount === 4 ? (\n            <h2>Good job!</h2>\n          ): null\n        }\n        Correct guesses: {this.state.correctGuessCount}<br />\n        Wrong guesses: {this.state.wrongGuessCount}\n      </div>\n\n      <div className=\"Question\">\n        <p className=\"Question-prompt\">Ophelia - 1852</p>\n        <img className=\"Question-image\" src=\"https://blogs.wright.edu/learn/fogdog/files/2019/05/image-for-item-4-John-Everret-Millais-Ophelia-painting-1851-52-use-with-Lauren-Reder-piece-1024x562.jpeg\" alt=\"dragon eggies\" />\n\n        {\n          this.state.questionsAnswered[0] !== null ? (\n            <div className=\"Question-explanation\">\n              <h2>{this.state.questionsAnswered[0] ? <i>Correct!</i>: <i>Incorrect...</i>}</h2>\n              Sir John Everett Millais depicts Ophelia, a character from William Shakespear's play Hamlet, singing before she drowns in a river.\n            </div>\n          ) : (\n            <div className=\"Question-options\">\n              <button onClick={() => this.onWrongAnswer(0)}>1. Dante Gabriel Rosetti</button>\n              <button onClick={() => this.onCorrectAnswer(0)}>2. Sir John Everett Millais</button>\n              <button onClick={() => this.onWrongAnswer(0)}>3. John Everett Millais</button>\n              <button onClick={() => this.onWrongAnswer(0)}>4. John William Waterhouse</button>\n            </div>\n          )\n        }\n       \n      </div>\n      <div className=\"Question\">\n        <p className=\"Question-prompt\">Christina's World - 1948</p>\n        <img className=\"Question-image\" src=\"https://www.moma.org/media/W1siZiIsIjE2NTQ1NyJdLFsicCIsImNvbnZlcnQiLCItcXVhbGl0eSA5MCAtcmVzaXplIDIwMDB4MjAwMFx1MDAzZSJdXQ.jpg?sha=64fb4feaaa506f2b\" alt=\"frosty boye\"/>\n\n        {\n          this.state.questionsAnswered[2] !== null? (\n            <div className=\"Question-explanation\">\n              <h2>{this.state.questionsAnswered[2] ? <i>Correct!</i>: <i>Incorrect...</i>}</h2>\n              Andrew Wyeth's Christina's World is one of the best known American paintings of the middle 20th century.\n            </div>\n          ):(\n            <div className=\"Question-options\">\n              <button onClick={() => this.onWrongAnswer(2)}>1. Winslow Homer</button>\n              <button onClick={() => this.onWrongAnswer(2)}>2. Edward Hopper</button>\n              <button onClick={() => this.onWrongAnswer(2)}>3. Normam Rockwell</button>\n              <button onClick={() => this.onCorrectAnswer(2)}>4. Andrew Wyeth</button>\n            </div>\n          )\n        }\n                \n      </div>\n\n      <div className=\"Question\">\n        <p className=\"Question-prompt\">The Birth of Venus ~ 1480's</p>\n        <img className=\"Question-image\" src=\"https://imgc.allpostersimages.com/img/print/u-g-Q1GA2DM0.jpg?w=550&h=550&p=0\" alt=\"spooky man\" />\n\n       {\n          this.state.questionsAnswered[1] !== null ? (\n            <div className=\"Question-explanation Question--answered\">\n             <h2>{this.state.questionsAnswered[1] ?  <i>Correct!</i>: <i>Incorrect...</i>}</h2>\n             The Birth of Venus is a painting by the Italian artist Sandro Botticelli, probably made in the mid 1480s. It depicts the goddess Venus arriving at the shore after her birth, when she had emerged from the sea fully-grown.\n            </div>\n          ): (\n            <div className=\"Question-options\">\n            <button onClick={() => this.onCorrectAnswer(1)}>1. Sandro Botticelli</button>\n            <button onClick={() => this.onWrongAnswer(1)}>2. Leonardo da Vinci</button>\n            <button onClick={() => this.onWrongAnswer(1)}>3. Titian</button>\n            <button onClick={() => this.onWrongAnswer(1)}>4. Michelangelo</button>\n          </div>\n          )\n        }\n\n      </div>\n\n      <div className=\"Question\">\n        <p className=\"Question-prompt\">Torso of a Woman in the Sunlight - 1876</p>\n        <img className=\"Question-image\" src=\"https://3wrxqs36sylaoef0l2imhgz1-wpengine.netdna-ssl.com/wp-content/uploads/2019/06/Screen-Shot-2019-06-07-at-2.59.28-PM-e1559934060106-670x402.png\" alt=\"stay a-head, ned!\" />\n\n        {\n          this.state.questionsAnswered[4] !== null ? (\n            <div className=\"Question-explanation\">\n              <h2>{this.state.questionsAnswered[4] ? <i>Correct!</i>: <i>Incorrect...</i>}</h2>\n              Best known for portraiture, figurative work, and his series of voluptuous bathing women, Pierre-Auguste Renoir was among the first group of French Impressionist painters.\n            </div>\n          ):(\n            <div className=\"Question-options\">\n              <button onClick={() => this.onWrongAnswer(4)}>1. Paul CÃ©zanne</button>\n              <button onClick={() => this.onCorrectAnswer(4)}>2. Pierre-Auguste Renoir</button>\n              <button onClick={() => this.onWrongAnswer(4)}>3. Edgar Degas</button>\n              <button onClick={() => this.onWrongAnswer(4)}>4. Claude Monet</button>\n            </div>\n          )\n        }\n\n      </div>\n\n     \n\n      <div className=\"Question\">\n        <p className=\"Question-prompt\">The Sleepers - 1886</p>\n        <img className=\"Question-image\" src=\"https://i.etsystatic.com/15350345/r/il/f44c98/1796876199/il_570xN.1796876199_swmq.jpg\" alt=\"doggo\" />\n\n        {\n          this.state.questionsAnswered[3] !== null ? (\n            <div className=\"Question-explanation\">\n              <h2>{this.state.questionsAnswered[3] ? <i>Correct!</i>: <i>Incorrect...</i>}</h2>\n              Le Sommeil is an erotic oil painting on canvas by French artist Gustave Courbet created in 1866. The painting, which depicts a lesbian couple, is also known as the Two Friends and Indolence and Lust.\n            </div>\n          ):(\n            <div className=\"Question-options\">\n              <button onClick={() => this.onWrongAnswer(3)}>1. Honore Daumier</button>\n              <button onClick={() => this.onCorrectAnswer(3)}>2. Jean-Francois Millet</button>\n              <button onClick={() => this.onWrongAnswer(3)}>3. Gustave Courbet</button>\n              <button onClick={() => this.onWrongAnswer(3)}>4. Ãdouard Manet</button>\n            </div>\n          )\n        }\n\n      </div>\n\n      \n    </div>\n  );\n}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}